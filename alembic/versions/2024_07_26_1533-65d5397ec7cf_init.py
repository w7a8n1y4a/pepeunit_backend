"""init

Revision ID: 65d5397ec7cf
Revises: 
Create Date: 2024-07-26 15:33:55.418087

"""
from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision = '65d5397ec7cf'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('agent_uuid', sa.Uuid(), nullable=False),
    sa.Column('agent_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('resource_uuid', sa.Uuid(), nullable=False),
    sa.Column('resource_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_permissions_agent_uuid'), 'permissions', ['agent_uuid'], unique=False)
    op.create_index(op.f('ix_permissions_resource_uuid'), 'permissions', ['resource_uuid'], unique=False)
    op.create_index(op.f('ix_permissions_uuid'), 'permissions', ['uuid'], unique=False)
    op.create_table('users',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('role', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('login', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('telegram_chat_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('hashed_password', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cipher_dynamic_salt', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('login'),
    sa.UniqueConstraint('telegram_chat_id')
    )
    op.create_index(op.f('ix_users_uuid'), 'users', ['uuid'], unique=False)
    op.create_table('repos',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('visibility_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('repo_url', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_public_repository', sa.Boolean(), nullable=False),
    sa.Column('cipher_credentials_private_repository', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('default_branch', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_auto_update_repo', sa.Boolean(), nullable=False),
    sa.Column('default_commit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('is_only_tag_update', sa.Boolean(), nullable=False),
    sa.Column('update_frequency_in_seconds', sa.Integer(), nullable=False),
    sa.Column('last_update_datetime', sa.DateTime(), nullable=False),
    sa.Column('creator_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['creator_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_repos_uuid'), 'repos', ['uuid'], unique=False)
    op.create_table('units',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('visibility_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('is_auto_update_from_repo_unit', sa.Boolean(), nullable=False),
    sa.Column('repo_branch', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('repo_commit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('last_update_datetime', sa.DateTime(), nullable=False),
    sa.Column('unit_state_dict', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('current_commit_version', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cipher_env_dict', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creator_uuid', sa.UUID(), nullable=True),
    sa.Column('repo_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['creator_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['repo_uuid'], ['repos.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('name')
    )
    op.create_index(op.f('ix_units_uuid'), 'units', ['uuid'], unique=False)
    op.create_table('units_nodes',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('visibility_level', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_rewritable_input', sa.Boolean(), nullable=False),
    sa.Column('topic_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('create_datetime', sa.DateTime(), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('creator_uuid', sa.UUID(), nullable=True),
    sa.Column('unit_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['creator_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['unit_uuid'], ['units.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_units_nodes_uuid'), 'units_nodes', ['uuid'], unique=False)
    op.create_table('units_nodes_edges',
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('node_output_uuid', sa.UUID(), nullable=True),
    sa.Column('node_input_uuid', sa.UUID(), nullable=True),
    sa.ForeignKeyConstraint(['node_input_uuid'], ['units_nodes.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['node_output_uuid'], ['units_nodes.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_units_nodes_edges_uuid'), 'units_nodes_edges', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_units_nodes_edges_uuid'), table_name='units_nodes_edges')
    op.drop_table('units_nodes_edges')
    op.drop_index(op.f('ix_units_nodes_uuid'), table_name='units_nodes')
    op.drop_table('units_nodes')
    op.drop_index(op.f('ix_units_uuid'), table_name='units')
    op.drop_table('units')
    op.drop_index(op.f('ix_repos_uuid'), table_name='repos')
    op.drop_table('repos')
    op.drop_index(op.f('ix_users_uuid'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_permissions_uuid'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_resource_uuid'), table_name='permissions')
    op.drop_index(op.f('ix_permissions_agent_uuid'), table_name='permissions')
    op.drop_table('permissions')
    # ### end Alembic commands ###
